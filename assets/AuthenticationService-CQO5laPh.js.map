{"version":3,"file":"AuthenticationService-CQO5laPh.js","sources":["../../jd_frontend/src/api/generated/services/AuthenticationService.ts"],"sourcesContent":["/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { LoginRequest } from '../models/LoginRequest';\nimport type { PasswordChange } from '../models/PasswordChange';\nimport type { PasswordResetConfirm } from '../models/PasswordResetConfirm';\nimport type { PasswordResetRequest } from '../models/PasswordResetRequest';\nimport type { ProfileUpdate } from '../models/ProfileUpdate';\nimport type { TokenResponse } from '../models/TokenResponse';\nimport type { UserResponse } from '../models/UserResponse';\nimport type { UserSignupRequest } from '../models/UserSignupRequest';\nimport type { UserSignupResponse } from '../models/UserSignupResponse';\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport { OpenAPI } from '../core/OpenAPI';\nimport { request as __request } from '../core/request';\nexport class AuthenticationService {\n    /**\n     * Login\n     * Autentiserar användare och returnerar JWT token enligt PRP.md.\n     *\n     * **Använd denna endpoint först för att få en token som används i andra endpoints.**\n     *\n     * **Exempel med curl:**\n     * ```bash\n     * curl -X POST \"http://localhost:8000/auth/login\"       -H \"Content-Type: application/json\"       -d '{\n         * \"username\": \"your_username\",\n         * \"password\": \"your_password\"\n         * }'\n         * ```\n         *\n         * **Body:**\n         * ```json\n         * {\n             * \"username\": \"your_username\",\n             * \"password\": \"your_password\"\n             * }\n             * ```\n             *\n             * **Response:**\n             * ```json\n             * {\n                 * \"access_token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\",\n                 * \"token_type\": \"bearer\",\n                 * \"expires_in\": 3600,\n                 * \"user\": {\n                     * \"core_user_id\": 1,\n                     * \"username\": \"your_username\",\n                     * \"email\": null,\n                     * \"full_name\": \"Your Name\",\n                     * \"role\": \"admin\",\n                     * \"is_active\": true,\n                     * \"created_at\": \"2025-07-05T13:14:41.403089\",\n                     * \"updated_at\": \"2025-07-05T13:14:41.403089\"\n                     * }\n                     * }\n                     * ```\n                     *\n                     * **Använd token i andra endpoints:**\n                     * ```bash\n                     * # Lägg till Authorization header i alla andra requests\n                     * -H \"Authorization: Bearer <access_token_från_login>\"\n                     * ```\n                     *\n                     * **Errors:**\n                     * - 401: Invalid credentials\n                     * - 403: User account disabled\n                     * @param requestBody\n                     * @returns TokenResponse Successful Response\n                     * @throws ApiError\n                     */\n                    public static loginAuthLoginPost(\n                        requestBody: LoginRequest,\n                    ): CancelablePromise<TokenResponse> {\n                        return __request(OpenAPI, {\n                            method: 'POST',\n                            url: '/auth/login',\n                            body: requestBody,\n                            mediaType: 'application/json',\n                            errors: {\n                                422: `Validation Error`,\n                            },\n                        });\n                    }\n                    /**\n                     * Get Current User Info\n                     * Returnerar information om nuvarande autentiserade användare.\n                     *\n                     * Headers:\n                     * ```\n                     * Authorization: Bearer <jwt_token>\n                     * ```\n                     *\n                     * Response:\n                     * ```json\n                     * {\n                         * \"core_user_id\": 1,\n                         * \"username\": \"your_username\",\n                         * \"email\": \"your_email\",\n                         * \"full_name\": \"Your Name\",\n                         * \"role\": \"admin\",\n                         * \"is_active\": true\n                         * }\n                         * ```\n                         *\n                         * Errors:\n                         * - 401: Invalid or missing token\n                         * - 403: User account disabled\n                         * @returns UserResponse Successful Response\n                         * @throws ApiError\n                         */\n                        public static getCurrentUserInfoAuthMeGet(): CancelablePromise<UserResponse> {\n                            return __request(OpenAPI, {\n                                method: 'GET',\n                                url: '/auth/me',\n                            });\n                        }\n                        /**\n                         * Logout\n                         * Logout endpoint (JWT är stateless så detta är mest för kompatibilitet).\n                         *\n                         * I JWT-baserad auth finns ingen server-side session att invalidera.\n                         * Klienten bör bara ta bort token från local storage.\n                         *\n                         * Response:\n                         * ```json\n                         * {\n                             * \"message\": \"Successfully logged out\"\n                             * }\n                             * ```\n                             * @returns any Successful Response\n                             * @throws ApiError\n                             */\n                            public static logoutAuthLogoutPost(): CancelablePromise<any> {\n                                return __request(OpenAPI, {\n                                    method: 'POST',\n                                    url: '/auth/logout',\n                                });\n                            }\n                            /**\n                             * Signup\n                             * Registrerar ny användare enligt BE-130 och BE-146.\n                             *\n                             * **Med invite token (?token=...):**\n                             * - Skapar aktiv account direkt om token är giltig\n                             * - Token markeras som använd\n                             *\n                             * **Utan invite token:**\n                             * - När OPEN_SIGNUP=false (default): Skapar inaktiv account som kräver verifiering\n                             * - När OPEN_SIGNUP=true: Skapar aktiv account direkt\n                             *\n                             * Body:\n                             * ```json\n                             * {\n                                 * \"username\": \"newuser123\",\n                                 * \"password\": \"mySecurePassword123\",\n                                 * \"email\": \"user@example.com\",\n                                 * \"full_name\": \"John Doe\"\n                                 * }\n                                 * ```\n                                 *\n                                 * Response (201):\n                                 * ```json\n                                 * {\n                                     * \"core_user_id\": 123,\n                                     * \"username\": \"newuser123\",\n                                     * \"email\": \"user@example.com\",\n                                     * \"full_name\": \"John Doe\",\n                                     * \"role\": \"user\",\n                                     * \"is_active\": true,\n                                     * \"created_at\": \"2025-01-15T10:30:00Z\",\n                                     * \"message\": \"Account created and activated via invite token. You can now log in.\"\n                                     * }\n                                     * ```\n                                     *\n                                     * Errors:\n                                     * - 400: Invalid input, invalid/expired invite token\n                                     * - 409: Username already exists\n                                     * - 500: Internal server error\n                                     * @param requestBody\n                                     * @param token Invite token för aktivering av account\n                                     * @returns UserSignupResponse Successful Response\n                                     * @throws ApiError\n                                     */\n                                    public static signupAuthSignupPost(\n                                        requestBody: UserSignupRequest,\n                                        token?: (string | null),\n                                    ): CancelablePromise<UserSignupResponse> {\n                                        return __request(OpenAPI, {\n                                            method: 'POST',\n                                            url: '/auth/signup',\n                                            query: {\n                                                'token': token,\n                                            },\n                                            body: requestBody,\n                                            mediaType: 'application/json',\n                                            errors: {\n                                                422: `Validation Error`,\n                                            },\n                                        });\n                                    }\n                                    /**\n                                     * Refresh Token\n                                     * Förnyar access-token med refresh_token från Authorization header.\n                                     * @returns TokenResponse Successful Response\n                                     * @throws ApiError\n                                     */\n                                    public static refreshTokenAuthRefreshPost(): CancelablePromise<TokenResponse> {\n                                        return __request(OpenAPI, {\n                                            method: 'POST',\n                                            url: '/auth/refresh',\n                                        });\n                                    }\n                                    /**\n                                     * Forgot Password\n                                     * Begär lösenordsåterställning\n                                     * @param requestBody\n                                     * @returns any Successful Response\n                                     * @throws ApiError\n                                     */\n                                    public static forgotPasswordAuthForgotPasswordPost(\n                                        requestBody: PasswordResetRequest,\n                                    ): CancelablePromise<any> {\n                                        return __request(OpenAPI, {\n                                            method: 'POST',\n                                            url: '/auth/forgot-password',\n                                            body: requestBody,\n                                            mediaType: 'application/json',\n                                            errors: {\n                                                422: `Validation Error`,\n                                            },\n                                        });\n                                    }\n                                    /**\n                                     * Reset Password\n                                     * Återställ lösenord med temporärt lösenord\n                                     * @param requestBody\n                                     * @returns any Successful Response\n                                     * @throws ApiError\n                                     */\n                                    public static resetPasswordAuthResetPasswordPost(\n                                        requestBody: PasswordResetConfirm,\n                                    ): CancelablePromise<any> {\n                                        return __request(OpenAPI, {\n                                            method: 'POST',\n                                            url: '/auth/reset-password',\n                                            body: requestBody,\n                                            mediaType: 'application/json',\n                                            errors: {\n                                                422: `Validation Error`,\n                                            },\n                                        });\n                                    }\n                                    /**\n                                     * Update Profile\n                                     * Uppdatera användarprofil\n                                     * @param requestBody\n                                     * @returns any Successful Response\n                                     * @throws ApiError\n                                     */\n                                    public static updateProfileAuthProfilePut(\n                                        requestBody: ProfileUpdate,\n                                    ): CancelablePromise<any> {\n                                        return __request(OpenAPI, {\n                                            method: 'PUT',\n                                            url: '/auth/profile',\n                                            body: requestBody,\n                                            mediaType: 'application/json',\n                                            errors: {\n                                                422: `Validation Error`,\n                                            },\n                                        });\n                                    }\n                                    /**\n                                     * Change Password\n                                     * Ändra lösenord (när inloggad)\n                                     * @param requestBody\n                                     * @returns any Successful Response\n                                     * @throws ApiError\n                                     */\n                                    public static changePasswordAuthPasswordPut(\n                                        requestBody: PasswordChange,\n                                    ): CancelablePromise<any> {\n                                        return __request(OpenAPI, {\n                                            method: 'PUT',\n                                            url: '/auth/password',\n                                            body: requestBody,\n                                            mediaType: 'application/json',\n                                            errors: {\n                                                422: `Validation Error`,\n                                            },\n                                        });\n                                    }\n                                }\n"],"names":["AuthenticationService","requestBody","__request","OpenAPI","token"],"mappings":"+CAgBO,MAAMA,CAAsB,CAuDf,OAAc,mBACVC,EACgC,CAChC,OAAOC,EAAUC,EAAS,CACtB,OAAQ,OACR,IAAK,cACL,KAAMF,EACN,UAAW,mBACX,OAAQ,CACJ,IAAK,kBAAA,CACT,CACH,CACL,CA4BI,OAAc,6BAA+D,CACzE,OAAOC,EAAUC,EAAS,CACtB,OAAQ,MACR,IAAK,UAAA,CACR,CACL,CAiBI,OAAc,sBAA+C,CACzD,OAAOD,EAAUC,EAAS,CACtB,OAAQ,OACR,IAAK,cAAA,CACR,CACL,CA8CQ,OAAc,qBACVF,EACAG,EACqC,CACrC,OAAOF,EAAUC,EAAS,CACtB,OAAQ,OACR,IAAK,eACL,MAAO,CACH,MAASC,CAAA,EAEb,KAAMH,EACN,UAAW,mBACX,OAAQ,CACJ,IAAK,kBAAA,CACT,CACH,CACL,CAOA,OAAc,6BAAgE,CAC1E,OAAOC,EAAUC,EAAS,CACtB,OAAQ,OACR,IAAK,eAAA,CACR,CACL,CAQA,OAAc,qCACVF,EACsB,CACtB,OAAOC,EAAUC,EAAS,CACtB,OAAQ,OACR,IAAK,wBACL,KAAMF,EACN,UAAW,mBACX,OAAQ,CACJ,IAAK,kBAAA,CACT,CACH,CACL,CAQA,OAAc,mCACVA,EACsB,CACtB,OAAOC,EAAUC,EAAS,CACtB,OAAQ,OACR,IAAK,uBACL,KAAMF,EACN,UAAW,mBACX,OAAQ,CACJ,IAAK,kBAAA,CACT,CACH,CACL,CAQA,OAAc,4BACVA,EACsB,CACtB,OAAOC,EAAUC,EAAS,CACtB,OAAQ,MACR,IAAK,gBACL,KAAMF,EACN,UAAW,mBACX,OAAQ,CACJ,IAAK,kBAAA,CACT,CACH,CACL,CAQA,OAAc,8BACVA,EACsB,CACtB,OAAOC,EAAUC,EAAS,CACtB,OAAQ,MACR,IAAK,iBACL,KAAMF,EACN,UAAW,mBACX,OAAQ,CACJ,IAAK,kBAAA,CACT,CACH,CACL,CACJ"}